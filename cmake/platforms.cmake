
add_library(platform INTERFACE)

IF(FSO_CMAKE_DEBUG)
	INCLUDE(debug-vars)
ENDIF(FSO_CMAKE_DEBUG)

set(PLATFORM_WINDOWS FALSE CACHE INTERNAL "" FORCE)
set(PLATFORM_UNIX FALSE CACHE INTERNAL "" FORCE)
set(PLATFORM_LINUX FALSE CACHE INTERNAL "" FORCE)
set(PLATFORM_MAC FALSE CACHE INTERNAL "" FORCE)

IF(WIN32)
	INCLUDE(platform-win32)
ELSEIF(UNIX)
	INCLUDE(platform-unix)

	IF(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
		INCLUDE(platform-freebsd)
	ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "SunOS")
		INCLUDE(platform-solaris)
	ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
		include(platform-darwin)
	elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
		set(PLATFORM_LINUX TRUE CACHE INTERNAL "" FORCE)
	ENDIF()
ELSE(WIN32)
	MESSAGE(STATUS "This platform is not supported, good luck!")
ENDIF(WIN32)

function(target_add_platform_files target filetype)
	set(files )
	set(definitions )
	foreach(ARG ${ARGN})
		get_filename_component(abs_filename ${ARG} ABSOLUTE BASE_DIR ${CMAKE_CURRENT_LIST_DIR})
		set(filename)
		set(path)
		set(filename_noext)
        get_filename_component(filename ${ARG} NAME)
		get_filename_component(path ${ARG} DIRECTORY)
		get_filename_component(abs_path ${abs_filename} DIRECTORY)
		get_filename_component(filename_noext ${ARG} NAME_WLE)

		
		if (NOT path STREQUAL "")
			set(path "${path}/")
		endif()
		
		list( APPEND files "${abs_path}/${PLATFORM_FILENAME_PREFIX}-${filename}")
		list(APPEND  definitions "-Dplatform_header_${target}_${filename_noext}=\"${path}${PLATFORM_FILENAME_PREFIX}-${filename}\"")
    endforeach()
	target_sources(${target} ${filetype} ${files})
	target_compile_definitions(${target} ${filetype} ${definitions})
endfunction()